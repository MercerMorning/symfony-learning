# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Controller/Common/*'

    App\Doctrine\MigrationEventSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    App\Service\AuthService:
        arguments:
            $tokenTTL: '%env(JWT_TTL_SEC)%'

    App\Service\AsyncService:
        calls:
            - [ 'registerProducer', [ !php/const App\Service\AsyncService::ADD_ORDER, '@old_sound_rabbit_mq.add_order_producer' ] ]
#            - [ 'registerProducer', [ !php/const App\Service\AsyncService::CREATE_ORDER, '@old_sound_rabbit_mq.create_order' ] ]

    App\Factory\SaveOrderStrategyFactory:
        calls:
            - [ 'registerStrategy', [ 'sync', '@App\Strategy\SyncSaveOrderStrategy' ] ]
            - [ 'registerStrategy', [ 'async', '@App\Strategy\AsyncSaveOrderStrategy' ] ]

    App\Resolver\CustomResolverMap:
        tags:
            - { name: overblog_graphql.resolver_map, schema: default }
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
