old_sound_rabbit_mq:
    connections:
        default:
            url: '%env(RABBITMQ_URL)%'
    producers:
        add_order:
            connection: default
            exchange_options: { name: 'old_sound_rabbit_mq.add_order', type: direct }
        invalidate_cache:
            connection: default
            exchange_options: { name: 'old_sound_rabbit_mq.invalidate_cache', type: direct }

    consumers:
        add_order:
            connection: default
            exchange_options: { name: 'old_sound_rabbit_mq.add_order', type: direct }
            queue_options: { name: 'old_sound_rabbit_mq.consumer.add_order' }
            callback: App\Consumer\AddOrder\Consumer
            idle_timeout: 300
            idle_timeout_exit_code: 0
            graceful_max_execution:
                timeout: 1800
                exit_code: 0
            qos_options: { prefetch_size: 0, prefetch_count: 1, global: false }
        invalidate_cache:
            connection: default
            exchange_options: { name: 'old_sound_rabbit_mq.invalidate_cache', type: direct }
            queue_options: { name: 'old_sound_rabbit_mq.consumer.invalidate_cache' }
            callback: App\Consumer\InvalidateCache\Consumer
            idle_timeout: 300
            idle_timeout_exit_code: 0
            graceful_max_execution:
                timeout: 1800
                exit_code: 0
            qos_options: { prefetch_size: 0, prefetch_count: 1, global: false }
#    producers:
#        # use 'old_sound_rabbit_mq.task_producer' service to send data.
#        task:
#            connection:       default
#            exchange_options: { name: 'task', type: direct }
#    consumers:
#        task:
#            connection:       default
#            exchange_options: { name: 'task', type: direct }
#            queue_options:    { name: 'task'}
#            callback:         App\Consumer\TaskConsumer
